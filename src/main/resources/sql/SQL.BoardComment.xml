<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.portfolio.www.repository.BoardCommentRepository">

  	<insert id="save" parameterType="BoardCommentDto">
  		<selectKey resultType="Integer" keyProperty="commentSeq" order="BEFORE">
		SELECT IFNULL(MAX(comment_seq)+1, 1) FROM board_comment 
		</selectKey>
  	 	INSERT INTO forum.board_comment
			(comment_seq, lvl, content, board_seq, board_type_seq, member_seq, root_comment_seq, comment_grp, ord_seq, reg_dtm)
			SELECT #{commentSeq}, #{lvl}, #{content}, #{boardSeq}, #{boardTypeSeq}, #{memberSeq},
			${parentCommentSeq},
			<choose>
				<when test='commentGrp != 0'>
				${commentGrp},
				</when>
				<otherwise>
				(SELECT IFNULL(MAX(comment_grp)+1, 1) FROM board_comment WHERE board_seq = #{boardSeq} AND board_type_seq = #{boardTypeSeq}),
				</otherwise>
			</choose>
			<choose>
				<when test='ordSeq != 0'>
				${ordSeq},
				</when>
				<otherwise>
				1,
				</otherwise>
			</choose>
			DATE_FORMAT(now(),'%Y%m%d%H%i%s')
	</insert>
	
	<update id="modify" parameterType="BoardCommentDto">
	 UPDATE forum.board_comment
		SET update_dtm = DATE_FORMAT(now(),'%Y%m%d%H%i%s')
		<if test='content != null'>
			,content = #{content}
		</if>
		<if test='ordSeq != null'>
			,ord_seq = #{ordSeq}
		</if>
	  WHERE comment_seq = #{commentSeq}
	</update>
	
	<delete id="delete" parameterType="int">
	 DELETE FROM forum.board_comment 
	  WHERE comment_seq = #{commentSeq}
	</delete>
	
	<select id="getAllCommentList" resultType="CommentResultDto">
	WITH RECURSIVE nested_comments(
		board_seq, board_type_seq, comment_seq, root_comment_seq, content, member_seq, path, lvl, sortable, reg_dtm, update_dtm, delete_dtm
	) AS (
		SELECT
		    board_seq,
		    board_type_seq,
		    comment_seq,
		    root_comment_seq,
		    content,
		    member_seq,
		    comment_seq as path,
		    lvl,
		    CONCAT('-', COALESCE(bc.root_comment_seq, 0), '.', comment_seq) as sortable,
		    reg_dtm, update_dtm, delete_dtm
		FROM
		    board_comment bc
		WHERE 1=1 
		 AND board_seq = #{boardSeq}
		 AND board_type_seq = #{boardTypeSeq}
		 AND root_comment_seq = 0
		UNION ALL
		SELECT
		    c.board_seq, c.board_type_seq,
		    c.comment_seq,
		    c.root_comment_seq,
		    c.content,
		    c.member_seq,
		    CONCAT(nc.path, '.', c.comment_seq) as path,
		    nc.lvl + 1,
		    CONCAT(nc.sortable, '.-', COALESCE(c.root_comment_seq, 0), '.', c.comment_seq) as sortable,
		    c.reg_dtm,
		    c.update_dtm,
		    c.delete_dtm
		FROM
	    	nested_comments nc
		JOIN board_comment c ON nc.comment_seq = c.root_comment_seq
	   WHERE 1=1 
		 AND c.board_seq = #{boardSeq}
		 AND c.board_type_seq = #{boardTypeSeq}
	)
	  SELECT nc.*, m.member_nm
	    FROM nested_comments nc
	    join member m on nc.member_seq = m.member_seq
	ORDER BY sortable
	</select>
	
	<select id="count" resultType="int">
	 SELECT COUNT(*)
	   FROM forum.board_comment
	  WHERE board_seq = #{boardSeq}
		AND board_type_seq = #{boardTypeSeq}
	</select>
	
	<select id="getVote" resultType="BoardCommentVoteDto">
	 SELECT * FROM forum.comment_vote
	  WHERE comment_seq = #{commentSeq}
		AND member_seq = #{memberSeq}
	</select>
	
	<insert id="addVote" parameterType="BoardCommentVoteDto">
	 INSERT INTO forum.comment_vote
	 (comment_seq, member_seq, is_like, ip, reg_dtm)
	 VALUES(#{commentSeq}, #{memberSeq}, #{isLike}, #{ip}, DATE_FORMAT(now(),'%Y%m%d%H%i%s'))
	</insert>
	
	<delete id="deleteVote" parameterType="int">
	 DELETE FROM forum.comment_vote
	  WHERE comment_seq = #{commentSeq}
	</delete>
	
	<update id="updateVote" parameterType="BoardCommentVoteDto">
	 UPDATE forum.comment_vote
	    SET is_like = #{isLike},
		    reg_dtm = DATE_FORMAT(now(),'%Y%m%d%H%i%s'),
		    ip = #{ip}
	  WHERE comment_seq = #{commentSeq}
	</update>
	
	<select id="getLikeTotal" parameterType="int" resultType="int">
	 SELECT COUNT(comment_seq)
	   FROM forum.comment_vote
	  WHERE comment_seq = #{commentSeq}
	    AND is_like = 'Y'
	</select>
	
	<select id="getUnlikeTotal" parameterType="int" resultType="int">
	 SELECT COUNT(comment_seq) 
	   FROM forum.comment_vote 
	  WHERE comment_seq = #{commentSeq}
		AND is_like = 'N'
	</select>
</mapper>